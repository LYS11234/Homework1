[박효재] [오후 1:23] 영수님 과제드립니다
[박효재] [오후 1:23] 유니티에서 박스콜라이더를 이용해 특정위치를 노드화하여 장애물로 인식하는 A*알고리즘 프로그램을 짜오세요
[박효재] [오후 1:24] 그리드의 크기는 자유롭게 짜주시면되구요
[박효재] [오후 1:24] 박스콜라이더가 그리드위에있을때 해당 노드들을 장애물로 취급해주시면됩니다
[박효재] [오후 1:25] 과제 기한은 이번주 토요일 까지입니다




노드를 만들 때는

노드의 위치를 정의한다(정수로 정하면 좋다. Vector2Int를 쓰면 편하다.)
노드의 이동가능 여부를 정의한다
경로 추적을 위한 부모 노드를 정의한다.

시작 노드로부터 지금까지 이동한 정도(비용) g값
현재 노드로부터 목표 노드까지 이동할 것으로 예상되는 거리(비용) h값

f값은 g값 + h값이다.

Node 함수를 구현해 위치와 이동가능 여부를 설정한다.

--A* 알고리즘이다.--


그리드 사이즈를 정의한다.(Vector2Int를 사용하면 되지 않을까?)

2차원이니까 Node를 2차원 배열로 노드를 정의한다.

그리드를 만들어내는 함수 정의

인근의 노드를 읽어오는 리스트 함수 정의



------


A*알고리즘 클래스에는 

길을 찾는 함수(리스트, 이유는 가장 거리가 짧은 길을 찾아야하기에 여러 경로를 저장해야함): 시작 노드와 목표노드를 저장, 탐색할 노드를 저장할 변수를 정의, 탐색한 노드를 저장할 변수를 정의(HashSet)

탐색 함수는 노드 탐색 후 탐색한 노드를 탐색한 노드 리스트에 저장, 최적 경로를 현재 위치로 설정해야함.

도착 후 지나온 경로를 반환하는 함수

노드 사이의 거리를 계산하는 함수

적용해 A*알고리즘 구현

숙제는 A*알고리즘과 boxCollider를 이용해 노드의 방해물을 만든다.


쿼드트리(4면으로 나누고 주변 탐색) + 전체 탐색 활용으로 탐색을 단순화


공간을 4분할, 장애물과 빈 공간이 공존하는 부분을 4분할하는 것을 계속한다. 이를 통해 장애물 파악 - A* 알고리즘이 맞나? 결국 빈공간을 미리 알고 시작하는 것고 다름 없지 않나?

구현은 그리드 가로 세로를 각각 절반으로 나눈 후 블록을 생성, 탐색->반복 - 장애물 검출에만 사용



현재 진행 상황: A* 알고리즘으로 길이 아예 없는 것이 아닐 경우 길찾기 가능


